key,layout_key,key_type,color,label
0 ),KC_0,alpha,white,0
1 !,KC_1,alpha,white,1
2 @,KC_2,alpha,white,2
3 #,KC_3,alpha,white,3
4 $,KC_4,alpha,white,4
5%,KC_5,alpha,white,5
6 ^,KC_6,alpha,white,6
7 &,KC_7,alpha,white,7
8 *,KC_8,alpha,white,8
9 (,KC_9,alpha,white,9
,KC_PMNS,punct,white,-
,KC_TRNS,transparent,white,-
,KC_EXLM,punct,grey,!
,KC_DQUO,punct,white,""""
"' """,KC_QUOT,punct,white,""" '"
,KC_HASH,punct,grey,#
,KC_DLR,punct,grey,$
,KC_PERC,punct,grey,%
,KC_AMPR,punct,grey,&
,KC_LPRN,punct,white,(
,KC_RPRN,punct,white,)
,KC_ASTR,punct,grey,*
,KC_COLN,punct,grey,:
; :,KC_SCLN,punct,white,: ;
,KC_QUES,punct,white,?
/ ?,KC_SLSH,punct,white,? /
,KC_AT,punct,grey,@
,KC_LCBR,punct,white,[
,C_S_T(KC_NO),function,white,[  ] [C+S]
,KC_RCBR,punct,white,]
,KC_CIRC,punct,grey,^
,KC_UNDS,punct,white,_
_ -,KC_MINS,punct,grey,_ -
[ {,KC_LBRC,punct,white,{ [
,KC_PIPE,punct,white,|
\ |,KC_BSLS,punct,white,| \
] },KC_RBRC,punct,white,} ]
,KC_TILD,punct,white,~
` ~,KC_GRV,punct,white,~ `
,KC_PLUS,punct,grey,+
= +,KC_EQL,punct,white,+ =
,KC_LT,punct,white,<
", <",KC_COMM,punct,white,"< ,"
,KC_GT,punct,white,>
. >,KC_DOT,punct,white,> .
a,KC_A,alpha,white,A
,RALT(KC_MINS),function,grey,A+-
,"LT(2,KC_A)",alpha,white,A [L2]
,RALT(KC_1),function,grey,A+1
key.alt_r,KC_RALT,function,grey,ALT
b,KC_B,alpha,white,B
key.backspace,KC_BSPC,function,white,BACK SPACE
c,KC_C,alpha,white,C
,RCTL(KC_1),function,white,C+1
,RCTL(KC_2),function,white,C+2
,RCTL(KC_3),function,white,C+3
,RCTL(KC_RALT),function,grey,C+A
,RCTL(KC_ENT),function,white,C+E
,LCA(KC_DEL),function,grey,CAD
key.caps_lock,KC_CAPS,function,grey,CAPS
key.ctrl_l,KC_LCTL,function,grey,CTRL
key.ctrl_r,KC_RCTL,function,grey,CTRL
d,KC_D,alpha,white,D
key.delete,KC_DEL,function,grey,DEL
,RGUI(KC_D),function,grey,DESK
key.down,KC_DOWN,function,grey,DOWN
e,KC_E,alpha,white,E
key.end,KC_END,function,white,END
key.enter,KC_ENT,function,grey,ENTER
key.esc,KC_ESC,function,red,ESC
f,KC_F,alpha,white,F
,KC_F1,function,white,F1
,KC_F10,function,white,F10
,KC_F2,function,white,F2
,KC_F3,function,white,F3
,KC_F4,function,white,F4
key.f5,KC_F5,function,white,F5
,KC_F6,function,white,F6
,KC_F7,function,white,F7
,KC_F8,function,white,F8
,KC_F9,function,white,F9
,RGUI(KC_E),function,grey,FILES
g,KC_G,alpha,white,G
,"LT(1,KC_G)",alpha,white,G [L1]
h,KC_H,alpha,white,H
,"LT(4,KC_H)",alpha,white,H [L4]
key.home,KC_HOME,function,white,HOME
i,KC_I,alpha,white,I
j,KC_J,alpha,white,J
k,KC_K,alpha,white,K
l,KC_L,alpha,white,L
key.left,KC_LEFT,function,grey,LEFT
,RGUI(KC_L),function,grey,LOCK
m,KC_M,alpha,white,M
,MO(1),function,grey,M1
,MO(3),function,grey,M3
,MO(4),function,grey,M4
n,KC_N,alpha,white,N
o,KC_O,alpha,white,O
p,KC_P,alpha,white,P
key.page_down,KC_PGDN,function,white,PG DN
key.page_up,KC_PGUP,function,white,PG UP
key.print_screen,KC_PSCR,function,grey,PRINT
q,KC_Q,alpha,white,Q
r,KC_R,alpha,white,R
key.right,KC_RGHT,function,grey,RIGHT
s,KC_S,alpha,white,S
,"LT(3,KC_S)",alpha,white,S [L3]
key.shift,KC_LSFT,function,grey,SHFT
key.shift_r,KC_RSFT,function,grey,SHFT
key.space,KC_SPC,function,white,SPACE
,RGUI(KC_LEFT),function,grey,SPLIT
t,KC_T,alpha,white,T
key.tab,KC_TAB,function,grey,TAB
key.to(1),TO(1),function,white,TO(1)
key.to(2),TO(2),function,white,TO(2)
u,KC_U,alpha,white,U
key.up,KC_UP,function,grey,UP
v,KC_V,alpha,white,V
w,KC_W,alpha,white,W
key.cmd,KC_LGUI,function,grey,WIN
x,KC_X,alpha,white,X
,C_S_T(KC_X),alpha,white,X [C+S]
y,KC_Y,alpha,white,Y
z,KC_Z,alpha,white,Z
,LCA_T(KC_Z),alpha,white,Z [C+A]
,KC_NO,empty,empty,
